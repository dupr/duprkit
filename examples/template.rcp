# --[ Recipe Template ]--
# Items marked with [*] are required, those with [?] can be safely removed.
# Special marks such as @Source@, @Version@ are placeholders that will be
# replaced in a post processing step.
#
# [*] alphabets, digits, dash and dot are allowed
Source: template
# [*] a short description about this recipe
Description: self-documented duprkit recipe template
# [*] https://www.debian.org/doc/debian-policy/ch-archive.html#sections
Section: utils
# [*] upstream version
Version: 0
# [?] upstream homepage
Homepage: https://example.org
# [?] where to download the source tarball
#Source-URL: https://example.org/@Source@_@Version@.tar.xz
# [?] hash sum of the file downloaded from Source-URL 
#Hash-md5: 66666666666666666666666666666666
# [?] recipe revision. will also turn source tree into quilt format.
#Revision: 0
# [?]
License: Expat/MIT
# [?] "DEBFULLNAME <DEBEMAIL>" or "username <hostname>" will be used as fallbacks.
Maintainer: Anonymous <foobar@example.org>
# [?]
Standards-Version: 4.3.0
# [?]
Build-Depends: duprkit,
# [?]
Build-Depends-Indep:
# [?] only useful in single-package layout. See also the Recipe-Binaries item.
Depends:
# [?]
Debhelper-Compat: 12
# [?] e.g. cmake, makefile, pybuild. See /usr/share/perl5/Debian/Debhelper/Buildsystem/ for more details
Debhelper-Buildsystem:
# [?] e.g. python3, this is the "--with" option to the debhelper.
Debhelper-Plugins:
# [?] relative location of patches. also turns source tree into quilt format.
#Patches:

# [?] Prepare the source tree under directory @Source@.
#     You only need to manually define this procedure when default script doesn't meet your need.
#Recipe-Prep-Source: |
#    flink cache @Source-URL@ @Source@_@Version@.tar.xz @Hash-md5@
#    mkdir @Source@.d
#    tar xf @Source@_@Version@.tar.xz --strip-components=1 -C @Source@.d

# [?] single package layout is assumed when this item is omitted.
#     this invalidates the "Depends" field above.
Recipe-Binaries:
    # each key in this level defines a "Package". 
    hello-world:
        # attributes starting with uppercase letter will be copied to debian/control
        Architecture: all
        # atrributes starting with lowercase letter will be copied to debian/package.attr
        install: bin/* usr/bin/

# [?] the debhelper rule overrides will be copied to debian/rules
override_dh_auto_configure: |
  dh_auto_configure

# [?] another example for overrides
override_dh_auto_test: |
  dh_auto_test

# [?] this override looks like Makefile syntax but it's still a valid YAML.
override_dh_strip:

^# HFT -------------------------------------------------------- SPLIT LINE ----
^# This HFT file can be unfolded into an executable shell script `bin/helloworld`,
^# and a symbol link `bin/hi` pointing to the executable `helloworld`. HFT
^# can automatically replace the @...@ marks if they are defined.
^$ HFT:WHOAMI `whoami`
^$ HFT:HOSTNAME `hostname`
^$ HFT:KERNEL `uname -s`
^ bin/helloworld 0o755
#!/bin/sh
echo "Hello, @HFT:WHOAMI@! I'm @HFT:HOSTNAME@, a machine running @HFT:KERNEL@.";
^# HFT -------------------------------------------------------- SPLIT LINE ----
^ bin/hi -> helloworld
^# HFT -------------------------------------------------------- SPLIT LINE ----
^ debian/README.Debian
README.Debian for the duprkit template
======================================
^# you can even write HFT comments between file content lines ...
The recipe for @Source@ (= @Version@) is generated on machine: @HFT:HOSTNAME@.
The placeholder marks will be automatically replaced by flinkH or hft.
The HFT file is useful when one needs to embed some short scripts into a
recipe, or to override automatically generated files, or to add additional
files the any directory.

One may want to override the auto-generated debian/control,
^# note, the placeholder will be replaced by "flink split" or "hft unfold"

  Source: @Source@
  Section: @Section@
  Homepage: @Homepage@
  Priority: optional
  Standards-Version: @Standards-Version@
  Maintainer: @Maintainer@
  Uploaders: @Uploaders@
  Build-Depends: debhelper-compat (= @Debhelper-Compat@), @Build-Depends@
  
  Package: @Source@
  Architecture: any
  Multi-Arch: no
  Depends: ${shlibs:Depends}, ${python:Depends}, ${python3:Depends}, ${misc:Depends}, @Depends@
  Description: @Description@
   @Description@

One may also want to override the auto-generated debian/rules,
^# note, the placeholder will be replaced by "flink split" or "hft unfold"

  #!/usr/bin/make -f
  %:
  	dh $@ -S@Debhelper-Buildsystem@ --with @Debhelper-Plugins@
