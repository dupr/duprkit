#!/bin/sh
set -e
SH=/bin/sh
GIT=/usr/bin/git
DUNFOLD=/usr/bin/dunfold
DUPR_DEFCOLL=~/.defcoll
__version__="0.0h"

_c36 () {
	echo -n "\033[1;36m" $@
}

_c162 () {
	echo -n "\033[1;38;5;162m" $@
}

_c () {
	echo -n "\033[0m" $@
}

flink_fetch () {
	if ! test -r $DUPR_DEFCOLL; then
		_c162 "→ Cloning"; _c36 "DefaultCollection"; _c162 "..."; _c "\n"
		$GIT clone https://github.com/dupr/DefaultCollection $DUPR_DEFCOLL
	else
		_c162 "→ Pulling"; _c36 "DefaultCollection"; _c162 "..."; _c "\n"
		cd $DUPR_DEFCOLL; $GIT pull
	fi
}

flink_unfold () {
	test -z "$1" && (echo "Unfolding nothing"; false)
	_c162 "→ Unfolding"; _c36 "$1"; _c162 "into"; _c36 ".sh"; _c162 "and";
	_c36 ".hft"; _c162 "..."; _c "\n"
	# Splits the .rcp into .sh script and .hft file
	$DUNFOLD $1
	_c162 "→ Executing"; _c36 "${1%.rcp}.sh"; _c162 "..."; _c "\n"
	# Execute the resulting .sh script
	$SH ${1%.rcp}.sh
}

flink_deb () {
	start_time="$(date -u +%s)"
	flink_unfold $1
	cd $(basename ${1%.rcp}).d; dpkg-buildpackage -us -uc
	end_time="$(date -u +%s)"
	_c162 "→ Completed"; _c36 "$1"; _c162 "in";
	_c36 "$(($end_time-$start_time))"; _c162 "seconds."; _c "\n"
}

flink_dsc () {
	start_time="$(date -u +%s)"
	flink_unfold $1
	cd $(basename ${1%.rcp}).d; dpkg-buildpackage -us -uc -nc -S
	end_time="$(date -u +%s)"
	_c162 "→ Completed"; _c36 "$1"; _c162 "in";
	_c36 "$(($end_time-$start_time))"; _c162 "seconds."; _c "\n"
}

flink_create () {
	if test -n "$1"; then
		cp -v /usr/share/doc/duprkit/examples/template.rcp $1.rcp
	else
		echo "Please specify recipe name"
	fi
}

flink_minimal () {
	if test -n "$1"; then
		cat /usr/share/doc/duprkit/examples/template.rcp \
			| awk '(!/^[[:blank:]]*#/)&&(!/^\^#/)||(/^#!/){print}' > $1.rcp
	else
		echo "Please specify recipe name"
	fi
}

usage () {
	echo "\033[1;38;5;162m-- Debian User Recipe ToolKit $__version__ --\033[0m"
	echo "Usage: $0 action [args]"
	echo ""
	echo "Actions"
	echo "   f|fetch                  Fetch the default DUPR collection."
	echo "   s|search [keyword]       Search in the default collection."
	echo "   l|ls                     List packages in default collection"
	echo "   u|unfold <.rcp>          Unfold .rcp file into debianized source tree."
	echo "   c|create <name>          Create talky template file: <name>.rcp"
	echo "   m|minimal <name>         Create minimal template: <name>.rcp"
	echo "   deb <.rcp>               Build .deb files from .rcp"
	echo "   dsc <.rcp>               Build .dsc files from .rcp"
}

case "$1" in
	f|fetch)
		shift
		flink_fetch $@
		;;
	s|search)
		shift
		if ! test -d $DUPR_DEFCOLL; then
			echo "Please run 'flink f' first."
			exit 1
		fi
		duprCollector -s $@ $DUPR_DEFCOLL
		;;
	deb)
		shift
		flink_deb $@
		;;
	dsc)
		shift
		flink_dsc $@
		;;
	u|unfold)
		shift
		flink_unfold $@
		;;
	c|create)
		shift
		flink_create $@
		;;
	m|minimal)
		shift
		flink_minimal $@
		;;
	l|ls|list)
		shift
		duprCollector $DUPR_DEFCOLL $@
		;;
	*)
		usage;;
esac
