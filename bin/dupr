#!/bin/sh
set -e

dupr_fetch () {
	echo "\033[1;38;5;162m→ Fetching \033[1;36mDefaultCollection\033[1;38;5;162m ...\033[0m"
	git clone https://github.com/dupr/DefaultCollection
}

dupr_search () {
	grep -ri $1
}

dupr_build () {
	test -z "$1" && (echo "Building nothing"; false)
	echo "\033[1;38;5;162m→ Unfolding \033[1;36m$1\033[1;38;5;162m into \033[1;36m.sh\033[1;38;5;162m and \033[1;36mdebian/\033[1;38;5;162m dir ...\033[0m"
	# Splits the .durpkg into .sh script and .hft file
	dunfold $1
	echo "\033[1;38;5;162m→ Triggering build for \033[1;36m$1\033[1;38;5;162m ...\033[0m"
	start_time="$(date -u +%s)"
	# Execute the resulting .sh script
	bash $1.sh
	sleep 1
	end_time="$(date -u +%s)"
	echo "\033[1;38;5;162m→ Completed \033[1;36m$1\033[1;38;5;162m in \033[1;36m$(($end_time-$start_time))\033[1;38;5;162m seconds.\033[0m"
}

dupr_create () {
	if test -z "$1"; then
		cp /usr/share/doc/duprkit/examples/template-default.durpkg .
	else
		cp /usr/share/doc/duprkit/examples/template-default.durpkg $1.durpkg
	fi
}

usage () {
	echo "\033[1;38;5;162m-- Dasteriskian User Package Repo Kit --\033[0m"
	echo "Usage: $0 action [args]"
	echo ""
	echo "Actions"
	echo "   f|fetch              Fetch the default DUPR collection."
	echo "   s|search             NotImplementedError."
	echo "   b|build <.durpkg>    Build .deb packages from .durpkg file."
	echo "   c|create [name]      Create a template file: <name>.durpkg"
	echo "   l|ls [dir]           List packages in collection: [dir]"
	echo "   help                 Print this usage information."
}

case "$1" in
	f|fetch)
		shift
		dupr_fetch $@
		;;
	s|search)
		shift
		dupr_search $@
		;;
	b|build)
		shift
		dupr_build $@
		;;
	c|create)
		shift
		dupr_create $@
		;;
	ls|list)
		shift
		dupr-librarian $@
		;;
	*)
		usage;;
esac
